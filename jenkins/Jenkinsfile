pipeline {
    agent {
        docker {
            image 'maven:3.8.5-jdk-11'
            args '-v /root/.m2:/root/.m2 --net="tallerdeinvestigacin_devops"'
        }
    }
    stages {
        /*stage('Unit Test') { 
            steps {
                configFileProvider([configFile(fileId: 'acaf626e-bcad-47c2-9ac8-66e73f40f3ce', variable: 'MAVEN_SETTINGS')]) {
                    sh 'mvn -s $MAVEN_SETTINGS clean test'
                }
            }
        }
        stage('Static Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar_login', variable: 'SECRET')]) { //set SECRET with the credential content
                    sh 'mvn sonar:sonar -Dsonar.host.url=http://172.20.0.7:9000 -Dsonar.login=$SECRET -Dsonar.projectKey=Test1'
                }
            }
        }*/
        stage('Build') {
            environment {
                GIT_SSH_COMMAND = "ssh -o StrictHostKeyChecking=no"
            }
            steps {
                sh """
                git config --global user.email julioo.wong@gmail.com
                git config --global user.name JulioWong
                """
                
                configFileProvider([configFile(fileId: 'acaf626e-bcad-47c2-9ac8-66e73f40f3ce', variable: 'MAVEN_SETTINGS')]) {
                    // sh 'mvn clean package -DskipTests=true -s $MAVEN_SETTINGS deploy:deploy'
                    // sh 'mvn -DskipTests=true -s $MAVEN_SETTINGS --batch-mode release:clean release:prepare release:perform'

                    sh """
                    cat /root/.ssh/id_rsa.pub

                    hostname

                    whoami

                    git status

                    git push origin master
                    """
                }
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo Deploy'
            }
        }
    }
}